#!/usr/bin/env xcrun swift

// https://projecteuler.net/problem=2
// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.

var cache = [1, 2]
func fib(index: Int) -> Int {
  if index < cache.count { return cache[index] }

  cache.append(fib(index - 1) + fib(index - 2))
  return cache[index]
}

var sum = 0
var index = 0
var latest = 0
repeat {
  if latest % 2 == 0 {
    sum += latest
  }

  latest = fib(index)
  index += 1
} while latest < 4000000

let answer = 4613732
print(sum)
